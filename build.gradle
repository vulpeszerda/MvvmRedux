// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext {
        kotlin = "1.2.31"
        androidPlugin = "3.0.1"
    }
    repositories {
        jcenter()
        mavenCentral()
        google()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:$androidPlugin"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin"
        classpath "org.jetbrains.kotlin:kotlin-android-extensions:$kotlin"
        classpath 'com.google.gms:google-services:3.1.1'
        classpath 'com.getkeepsafe.dexcount:dexcount-gradle-plugin:0.7.0'
        classpath 'com.novoda:bintray-release:0.5.0'
    }
}

allprojects {
    project.ext {
        kotlin = kotlin

        compileSdk = 27
        targetSdk = 27
        minSdk = 16
        buildTools = "27.0.3"

        supportLib = "27.1.1"
        googlePlay = "12.0.1"
        constraintLayout = "1.1.0-beta6"

        junit = "4.12"
        espresso = "3.0.0"

        rxJava2 = "2.1.12"
        rxAndroid2 = "2.0.2"
        rxKotlin2 = "2.2.0"
        rxBinding2 = "2.1.1"
        rxLifecycle2 = "2.2.1"
        rxPermission2 = "0.9.5@aar"

        androidArch = "1.1.1"
        room = "1.0.0"

        sampleVersionCode = 2
        sampleVersionName = "1.1.0"

        libraryVersionCode = 2
        libraryVersionName = "1.1.8"

        java7Home = project.hasProperty("java7_home") ?
                project.property("java7_home") : System.getenv("JAVA7_HOME")
        java8Home = project.hasProperty("java8_home") ?
                project.property("java8_home") : System.getenv("JAVA8_HOME")
    }
    repositories {
        jcenter()
        mavenCentral()
        google()
        maven { url "https://jitpack.io" }
    }

    tasks.withType(Javadoc).all {
        enabled = false
    }
}

project.ext.preDexLibs = !project.hasProperty('disablePreDex')

subprojects {
    project.plugins.whenPluginAdded { plugin ->
        if ("com.android.build.gradle.AppPlugin" == plugin.class.name) {
            project.android.dexOptions.preDexLibraries = rootProject.ext.preDexLibs
        } else if ("com.android.build.gradle.LibraryPlugin" == plugin.class.name) {
            project.android.dexOptions.preDexLibraries = rootProject.ext.preDexLibs
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
